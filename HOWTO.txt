# Backend Setup Instructions

## Prerequisites
- Python 3.11 or higher
- Git
- Terminal access (Command Prompt or PowerShell on Windows)

## Clone Repository
```bash
git clone <repository-url>
cd logistics-company-backend


Windows:
python -m venv venv
venv\Scripts\activate

Linux/Mac:
python3 -m venv venv
source venv/bin/activate


Install Dependencies
pip install -r requirements.txt

Database Setup
python setup_db.py

Configure Environment
Create a .env file in the root directory:

FLASK_APP=app.py
FLASK_ENV=development
DATABASE_URL=sqlite:///instance/db.sqlite
JWT_SECRET_KEY=your-secret-key


Run Application
python app.py

Testing
python test_db.py


API Endpoints
The backend will be running at: http://127.0.0.1:5000


### Plan for HOWTO.txt:
1. Prerequisites section
2. Setup environment section
3. Install dependencies section
4. Configure database section
5. Run application section
6. Testing section

```markdown


# Backend Setup Instructions

## Prerequisites
- Python 3.11 or higher
- Git
- Terminal access (Command Prompt or PowerShell on Windows)

## Clone Repository
```bash
git clone <repository-url>
cd logistics-company-backend
```

## Setup Virtual Environment
### Windows:
```bash
python -m venv venv
venv\Scripts\activate
```

### Linux/Mac:
```bash
python3 -m venv venv
source venv/bin/activate
```

## Install Dependencies
```bash
pip install -r requirements.txt
```

## Database Setup
```bash
python setup_db.py
```

## Configure Environment
Create a .env file in the root directory:
```
FLASK_APP=app.py
FLASK_ENV=development
DATABASE_URL=sqlite:///instance/db.sqlite
JWT_SECRET_KEY=your-secret-key
```

## Run Application
```bash
python app.py
```

## Testing
```bash
python test_db.py
```

## API Endpoints
The backend will be running at: http://127.0.0.1:5000

Available endpoints:
- POST /register - Register new client
- POST /login - Login for clients and employees
- POST /register_employee - Register new employee (requires admin token)

## Common Issues
1. If database is locked:
   - Stop the Flask server
   - Delete instance/db.sqlite
   - Run 

setup_db.py

 again

2. If modules are not found:
   - Make sure you're in the virtual environment
   - Verify requirements.txt installation